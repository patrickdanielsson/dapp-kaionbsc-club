const connect=document.querySelectorAll(".connect"),mint=document.querySelectorAll(".mint"),claim=document.querySelectorAll(".claim"),EvmChains=window.evmChains,Web3Modal=window.Web3Modal.default,WalletConnectProvider=window.WalletConnectProvider.default;let web3Modal,provider,balance,userAddress;const contractAddress="0xA02d33F34a377f27441d9d32C8697608B9B90847";function init(){web3Modal=new Web3Modal({network:"mainnet",cacheProvider:!1,providerOptions:{walletconnect:{package:WalletConnectProvider,options:{rpc:{56:"https://bsc-dataseed.binance.org/"},network:"binance"}}}})}async function onConnect(){try{provider=await web3Modal.connect()}catch(e){return void console.log("Could not get a wallet connection",e)}provider.on("accountsChanged",(e=>{fetchAccountData()})),provider.on("chainChanged",(e=>{fetchAccountData()})),provider.on("networkChanged",(e=>{fetchAccountData()})),await fetchAccountData(),await currentSupply(),await weiConvert(),await displaydApes(),await claimBalance()}async function fetchAccountData(){const e=new Web3(provider),n=await e.eth.getChainId();console.log(n);const t=await EvmChains.getChain(n);if(console.log(t.name),56!==n)return alert("Connect wallet to a Binance Smart Chain");const a=await e.eth.getAccounts();selectedAccount=a[0],userAddress=selectedAccount,showAddress(selectedAccount),Balance(selectedAccount),console.log("selected-account",selectedAccount)}async function claimBalance(){const e=new Web3(provider);let n=new(0,e.eth.Contract)(abi,contractAddress),t=0;const a=await n.methods.tokensOfOwner(userAddress).call();console.log(a);for(let c in a){console.log(a);const o=await n.methods.pendingForToken(a[c]).call(),s=e.utils.fromWei(o,"ether");t=Number(s)+t}const c=t.toFixed(6);return document.getElementById("claimBalance").innerHTML='<span class="cpink">'+c+'</span><span class="cyellow"> BNB</span>',c}const Balance=async e=>{const n=new Web3(provider),t=await n.eth.getBalance(e);balance=(t/10**18).toFixed(3);showAddress(e);connect_bt.classList.add("connect_btn"),connect_bt.innerHTML=`<span color="cpurple">${balance} BNB</span>`};function showAddress(e){return`${shortener(e,0,6)}...${shortener(e,36,42)}`}const shortener=(e,n,t)=>{let a="";for(let c=n;c<t;c++)a=[...a,e[c]];return a.join("")};async function weiConvert(){const e=new Web3(provider);let n=new(0,e.eth.Contract)(abi,contractAddress),t=await n.methods.currentPrice().call();console.log("Current Price Wei",t);const a=e.utils.fromWei(t,"ether");return console.log("ether value",a),document.getElementById("mintPrice").innerHTML=a,t}async function etherConvert(e){const n=new Web3(provider);let t=new(0,n.eth.Contract)(abi,contractAddress),a=await t.methods.priceTier().call();console.log("Current Price Wei",a);const c=n.utils.fromWei(e,"ether");return console.log("ether value",c),document.getElementById("mintPrice").innerHTML=c,c}const Claim=async()=>{let e=new(0,new Web3(provider).eth.Contract)(abi,contractAddress);if(await claimBalance()>0){let n=e.methods.claimForTokens().send({from:userAddress});await n&&Swal.fire({icon:"success",title:"Rewards Claimed",text:"Come back later to get more.",footer:'<a href="https://t.me/doodleapes"><span class="cpink">ROYALTIES ANNOUNCEMENTS</span></a>'})}else window.alert("You do not have any rewards to claim.")},Mint=async()=>{let e=new(0,new Web3(provider).eth.Contract)(abi,contractAddress),n=document.querySelector(".amount").value;n=parseInt(n);let t=await weiConvert();console.log(t);let a=n*t,c=285e3*n;if(n){let t;t=e.methods.mint(n).send({from:userAddress,value:a,gas:c}),await t?Swal.fire({icon:"success",title:'<font size="7">'+n+'<span class="cgreen"> D</span><span class="cpink">O</span><span class="cpurple">O</span><span class="cyellow">D</span><span class="cblue">L</span><span class="cpyellow">E </span><span class="cblue">A</span><span class="cgreen">P</span><span class="cpink">E</span></font>',text:"have been minted!",footer:'<a href="#MydApes"><span class="cpink">VIEW HERE</span></a>'}):Swal.fire({icon:"error",title:"Transaction Failed",text:"Check to see if the quantity you selected would change the mint price.",footer:'<a href="https://t.me/doodleapes">Support</a>'})}else Swal.fire({icon:"error",title:"Invalid Entry",text:"Please enter a valid token quantity!"})};window.addEventListener("load",(()=>{init(),localStorage.clear(),sessionStorage.clear()})),connect.forEach((function(e,n){e.addEventListener("click",(function(){balance||onConnect()}))})),mint.forEach((function(e,n){e.addEventListener("click",(()=>{balance?Mint():onConnect()}))})),claim.forEach((function(e,n){e.addEventListener("click",(()=>{balance?Claim():onConnect()}))}));